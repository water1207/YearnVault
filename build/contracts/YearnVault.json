{
  "contractName": "YearnVault",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/doubled/Desktop/code/YearnVault/contracts/YearnVault.sol\":\"YearnVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/doubled/Desktop/code/YearnVault/contracts/Context.sol\":{\"keccak256\":\"0x833a5e580ee46dfa7fd04cb7e0155f39b456033549902c5b29000bc94ece2b1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e90697c5902855a8e08e88a6e3444d7472e5692ec0a51b5c5d4c7795cff2864b\",\"dweb:/ipfs/QmdLhgSfvV18xwKMiQ1UoE6pMtGe15BzbAim79vp8jiTTH\"]},\"/Users/doubled/Desktop/code/YearnVault/contracts/ERC20.sol\":{\"keccak256\":\"0x6a08c2080732e6e955e19a9be37969fb7e82133bccc28cfca57e29bb0d3a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57605fe2661f778ec8aec691a6e9628ce6212b70dbb883e8f07d736b6f889f\",\"dweb:/ipfs/QmesoGfe5WuwZtn3S5npUN8r3ZbpTrvL3RraYELYTJuQN9\"]},\"/Users/doubled/Desktop/code/YearnVault/contracts/IERC20.sol\":{\"keccak256\":\"0x4d8e36d9dffc675411042b079c9e27c42200ffa49346f2d9d6067cd2cadf25ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd65357ae8ca0ae2d92682297ccfb834d5dd1e19a8400f18ce2238d906021f7b\",\"dweb:/ipfs/QmYBNa3WMmdHF6fTN25RUE6D8f2AdKXRtfXBpMdGoxpRqR\"]},\"/Users/doubled/Desktop/code/YearnVault/contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x33ff434f71b5c12d88211ce4f7e59bdf389a962bb2e10f875f9141796ed64621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653015ed27471d302a9c3d2b9a21ca6d16a85fefb7457d07df8ac96bb34e17fa\",\"dweb:/ipfs/QmUHWn1jEkuiAWGL8w9pzcTWDWemWrwcAmMVX6N5mPXZRM\"]},\"/Users/doubled/Desktop/code/YearnVault/contracts/YearnVault.sol\":{\"keccak256\":\"0x47331bd0569b733a5c027fdcc6344691d3402b74b94a6d37e6d9de4edca0faaa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c9a711b9e155f6b37766d818e2ce429d55b3ec707948c20771c1476a775aaca\",\"dweb:/ipfs/QmWZU4ug2GUNErpM187f3jipUrxRHpjaUUd22ghd94q69X\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f47616d654974656d0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f49544d00000000000000000000000000000000000000000000000000000000008152506064826003908051906020019062000098929190620002a3565b508160049080519060200190620000b1929190620002a3565b50620000d3620000c66200013160201b60201c565b826200013960201b60201c565b5050507382184314d27b9e63bf16ac2005059086566a9a9f600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004f1565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a390620003a6565b60405180910390fd5b620001c0600083836200029e60201b60201c565b8060026000828254620001d49190620003f6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200022b9190620003f6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002929190620003c8565b60405180910390a35050565b505050565b828054620002b1906200045d565b90600052602060002090601f016020900481019282620002d5576000855562000321565b82601f10620002f057805160ff191683800117855562000321565b8280016001018555821562000321579182015b828111156200032057825182559160200191906001019062000303565b5b50905062000330919062000334565b5090565b5b808211156200034f57600081600090555060010162000335565b5090565b600062000362601f83620003e5565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620003a08162000453565b82525050565b60006020820190508181036000830152620003c18162000353565b9050919050565b6000602082019050620003df600083018462000395565b92915050565b600082825260208201905092915050565b6000620004038262000453565b9150620004108362000453565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000448576200044762000493565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200047657607f821691505b602082108114156200048d576200048c620004c2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6115fd80620005016000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636e553f651161008c578063a3b921e211610066578063a3b921e21461023c578063a457c2d71461025a578063a9059cbb1461028a578063dd62ed3e146102ba576100cf565b80636e553f65146101be57806370a08231146101ee57806395d89b411461021e576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102ea565b6040516100e99190611257565b60405180910390f35b61010c60048036038101906101079190610dfb565b61037c565b6040516101199190611221565b60405180910390f35b61012a61039a565b6040516101379190611359565b60405180910390f35b61015a60048036038101906101559190610dac565b6103a4565b6040516101679190611221565b60405180910390f35b6101786104a5565b6040516101859190611374565b60405180910390f35b6101a860048036038101906101a39190610dfb565b6104ae565b6040516101b59190611221565b60405180910390f35b6101d860048036038101906101d39190610e60565b61055a565b6040516101e59190611359565b60405180910390f35b61020860048036038101906102039190610d47565b610618565b6040516102159190611359565b60405180910390f35b610226610660565b6040516102339190611257565b60405180910390f35b6102446106f2565b604051610251919061123c565b60405180910390f35b610274600480360381019061026f9190610dfb565b610718565b6040516102819190611221565b60405180910390f35b6102a4600480360381019061029f9190610dfb565b61080c565b6040516102b19190611221565b60405180910390f35b6102d460048036038101906102cf9190610d70565b61082a565b6040516102e19190611359565b60405180910390f35b6060600380546102f9906114e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906114e1565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b60006103906103896108b1565b84846108b9565b6001905092915050565b6000600254905090565b60006103b1848484610a84565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103fc6108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610473906112d9565b60405180910390fd5b610499856104886108b1565b85846104949190611401565b6108b9565b60019150509392505050565b60006012905090565b60006105506104bb6108b1565b8484600160006104c96108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461054b91906113ab565b6108b9565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016105bb939291906111ea565b602060405180830381600087803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610e37565b506000905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461066f906114e1565b80601f016020809104026020016040519081016040528092919081815260200182805461069b906114e1565b80156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160006107276108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90611339565b60405180910390fd5b6108016107ef6108b1565b8585846107fc9190611401565b6108b9565b600191505092915050565b60006108206108196108b1565b8484610a84565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092090611319565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611299565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a779190611359565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb906112f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b90611279565b60405180910390fd5b610b6f838383610d03565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec906112b9565b60405180910390fd5b8181610c019190611401565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c9191906113ab565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf59190611359565b60405180910390a350505050565b505050565b600081359050610d1781611582565b92915050565b600081519050610d2c81611599565b92915050565b600081359050610d41816115b0565b92915050565b600060208284031215610d5957600080fd5b6000610d6784828501610d08565b91505092915050565b60008060408385031215610d8357600080fd5b6000610d9185828601610d08565b9250506020610da285828601610d08565b9150509250929050565b600080600060608486031215610dc157600080fd5b6000610dcf86828701610d08565b9350506020610de086828701610d08565b9250506040610df186828701610d32565b9150509250925092565b60008060408385031215610e0e57600080fd5b6000610e1c85828601610d08565b9250506020610e2d85828601610d32565b9150509250929050565b600060208284031215610e4957600080fd5b6000610e5784828501610d1d565b91505092915050565b60008060408385031215610e7357600080fd5b6000610e8185828601610d32565b9250506020610e9285828601610d08565b9150509250929050565b610ea581611435565b82525050565b610eb481611447565b82525050565b610ec38161148a565b82525050565b6000610ed48261138f565b610ede818561139a565b9350610eee8185602086016114ae565b610ef781611571565b840191505092915050565b6000610f0f60238361139a565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7560228361139a565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fdb60268361139a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061104160288361139a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110a760258361139a565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061110d60248361139a565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061117360258361139a565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6111d581611473565b82525050565b6111e48161147d565b82525050565b60006060820190506111ff6000830186610e9c565b61120c6020830185610e9c565b61121960408301846111cc565b949350505050565b60006020820190506112366000830184610eab565b92915050565b60006020820190506112516000830184610eba565b92915050565b600060208201905081810360008301526112718184610ec9565b905092915050565b6000602082019050818103600083015261129281610f02565b9050919050565b600060208201905081810360008301526112b281610f68565b9050919050565b600060208201905081810360008301526112d281610fce565b9050919050565b600060208201905081810360008301526112f281611034565b9050919050565b600060208201905081810360008301526113128161109a565b9050919050565b6000602082019050818103600083015261133281611100565b9050919050565b6000602082019050818103600083015261135281611166565b9050919050565b600060208201905061136e60008301846111cc565b92915050565b600060208201905061138960008301846111db565b92915050565b600081519050919050565b600082825260208201905092915050565b60006113b682611473565b91506113c183611473565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113f6576113f5611513565b5b828201905092915050565b600061140c82611473565b915061141783611473565b92508282101561142a57611429611513565b5b828203905092915050565b600061144082611453565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114958261149c565b9050919050565b60006114a782611453565b9050919050565b60005b838110156114cc5780820151818401526020810190506114b1565b838111156114db576000848401525b50505050565b600060028204905060018216806114f957607f821691505b6020821081141561150d5761150c611542565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61158b81611435565b811461159657600080fd5b50565b6115a281611447565b81146115ad57600080fd5b50565b6115b981611473565b81146115c457600080fd5b5056fea2646970667358221220f884d4e6c2411f3f10d8bc08ad340559077d70bbc51e7ef386c0ed15d0a3087864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636e553f651161008c578063a3b921e211610066578063a3b921e21461023c578063a457c2d71461025a578063a9059cbb1461028a578063dd62ed3e146102ba576100cf565b80636e553f65146101be57806370a08231146101ee57806395d89b411461021e576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102ea565b6040516100e99190611257565b60405180910390f35b61010c60048036038101906101079190610dfb565b61037c565b6040516101199190611221565b60405180910390f35b61012a61039a565b6040516101379190611359565b60405180910390f35b61015a60048036038101906101559190610dac565b6103a4565b6040516101679190611221565b60405180910390f35b6101786104a5565b6040516101859190611374565b60405180910390f35b6101a860048036038101906101a39190610dfb565b6104ae565b6040516101b59190611221565b60405180910390f35b6101d860048036038101906101d39190610e60565b61055a565b6040516101e59190611359565b60405180910390f35b61020860048036038101906102039190610d47565b610618565b6040516102159190611359565b60405180910390f35b610226610660565b6040516102339190611257565b60405180910390f35b6102446106f2565b604051610251919061123c565b60405180910390f35b610274600480360381019061026f9190610dfb565b610718565b6040516102819190611221565b60405180910390f35b6102a4600480360381019061029f9190610dfb565b61080c565b6040516102b19190611221565b60405180910390f35b6102d460048036038101906102cf9190610d70565b61082a565b6040516102e19190611359565b60405180910390f35b6060600380546102f9906114e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906114e1565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b60006103906103896108b1565b84846108b9565b6001905092915050565b6000600254905090565b60006103b1848484610a84565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103fc6108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610473906112d9565b60405180910390fd5b610499856104886108b1565b85846104949190611401565b6108b9565b60019150509392505050565b60006012905090565b60006105506104bb6108b1565b8484600160006104c96108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461054b91906113ab565b6108b9565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016105bb939291906111ea565b602060405180830381600087803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610e37565b506000905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461066f906114e1565b80601f016020809104026020016040519081016040528092919081815260200182805461069b906114e1565b80156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160006107276108b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90611339565b60405180910390fd5b6108016107ef6108b1565b8585846107fc9190611401565b6108b9565b600191505092915050565b60006108206108196108b1565b8484610a84565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092090611319565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611299565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a779190611359565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb906112f9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b90611279565b60405180910390fd5b610b6f838383610d03565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec906112b9565b60405180910390fd5b8181610c019190611401565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c9191906113ab565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf59190611359565b60405180910390a350505050565b505050565b600081359050610d1781611582565b92915050565b600081519050610d2c81611599565b92915050565b600081359050610d41816115b0565b92915050565b600060208284031215610d5957600080fd5b6000610d6784828501610d08565b91505092915050565b60008060408385031215610d8357600080fd5b6000610d9185828601610d08565b9250506020610da285828601610d08565b9150509250929050565b600080600060608486031215610dc157600080fd5b6000610dcf86828701610d08565b9350506020610de086828701610d08565b9250506040610df186828701610d32565b9150509250925092565b60008060408385031215610e0e57600080fd5b6000610e1c85828601610d08565b9250506020610e2d85828601610d32565b9150509250929050565b600060208284031215610e4957600080fd5b6000610e5784828501610d1d565b91505092915050565b60008060408385031215610e7357600080fd5b6000610e8185828601610d32565b9250506020610e9285828601610d08565b9150509250929050565b610ea581611435565b82525050565b610eb481611447565b82525050565b610ec38161148a565b82525050565b6000610ed48261138f565b610ede818561139a565b9350610eee8185602086016114ae565b610ef781611571565b840191505092915050565b6000610f0f60238361139a565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7560228361139a565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fdb60268361139a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061104160288361139a565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110a760258361139a565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061110d60248361139a565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061117360258361139a565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6111d581611473565b82525050565b6111e48161147d565b82525050565b60006060820190506111ff6000830186610e9c565b61120c6020830185610e9c565b61121960408301846111cc565b949350505050565b60006020820190506112366000830184610eab565b92915050565b60006020820190506112516000830184610eba565b92915050565b600060208201905081810360008301526112718184610ec9565b905092915050565b6000602082019050818103600083015261129281610f02565b9050919050565b600060208201905081810360008301526112b281610f68565b9050919050565b600060208201905081810360008301526112d281610fce565b9050919050565b600060208201905081810360008301526112f281611034565b9050919050565b600060208201905081810360008301526113128161109a565b9050919050565b6000602082019050818103600083015261133281611100565b9050919050565b6000602082019050818103600083015261135281611166565b9050919050565b600060208201905061136e60008301846111cc565b92915050565b600060208201905061138960008301846111db565b92915050565b600081519050919050565b600082825260208201905092915050565b60006113b682611473565b91506113c183611473565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113f6576113f5611513565b5b828201905092915050565b600061140c82611473565b915061141783611473565b92508282101561142a57611429611513565b5b828203905092915050565b600061144082611453565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114958261149c565b9050919050565b60006114a782611453565b9050919050565b60005b838110156114cc5780820151818401526020810190506114b1565b838111156114db576000848401525b50505050565b600060028204905060018216806114f957607f821691505b6020821081141561150d5761150c611542565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61158b81611435565b811461159657600080fd5b50565b6115a281611447565b81146115ad57600080fd5b50565b6115b981611473565b81146115c457600080fd5b5056fea2646970667358221220f884d4e6c2411f3f10d8bc08ad340559077d70bbc51e7ef386c0ed15d0a3087864736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "87:1175:4:-:0;;;280:133;;;;;;;;;;1845:178:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:3:4;1952:5:1;1944;:13;;;;;;;;;;;;:::i;:::-;;1973:7;1963;:17;;;;;;;;;;;;:::i;:::-;;1986:32;1992:12;:10;;;:12;;:::i;:::-;2006:11;1986:5;;;:32;;:::i;:::-;1845:178;;;363:42:4::1;342:12;;:64;;;;;;;;;;;;;;;;;;87:1175:::0;;584:90:0;637:7;659:10;652:17;;584:90;:::o;7861:308:1:-;7959:1;7940:21;;:7;:21;;;;7932:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8004:49;8033:1;8037:7;8046:6;8004:20;;;:49;;:::i;:::-;8076:6;8060:12;;:22;;;;;;;:::i;:::-;;;;;;;;8110:6;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8148:7;8127:37;;8144:1;8127:37;;;8157:6;8127:37;;;;;;:::i;:::-;;;;;;;;7861:308;;:::o;10208:107::-;;;;:::o;87:1175:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:329:5:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:33;263:1;258:3;254:11;247:54;327:2;322:3;318:12;311:19;;153:183;;;:::o;342:118::-;429:24;447:5;429:24;:::i;:::-;424:3;417:37;407:53;;:::o;466:419::-;;670:2;659:9;655:18;647:26;;719:9;713:4;709:20;705:1;694:9;690:17;683:47;747:131;873:4;747:131;:::i;:::-;739:139;;637:248;;;:::o;891:222::-;;1022:2;1011:9;1007:18;999:26;;1035:71;1103:1;1092:9;1088:17;1079:6;1035:71;:::i;:::-;989:124;;;;:::o;1119:169::-;;1237:6;1232:3;1225:19;1277:4;1272:3;1268:14;1253:29;;1215:73;;;;:::o;1294:305::-;;1353:20;1371:1;1353:20;:::i;:::-;1348:25;;1387:20;1405:1;1387:20;:::i;:::-;1382:25;;1541:1;1473:66;1469:74;1466:1;1463:81;1460:2;;;1547:18;;:::i;:::-;1460:2;1591:1;1588;1584:9;1577:16;;1338:261;;;;:::o;1605:77::-;;1671:5;1660:16;;1650:32;;;:::o;1688:320::-;;1769:1;1763:4;1759:12;1749:22;;1816:1;1810:4;1806:12;1837:18;1827:2;;1893:4;1885:6;1881:17;1871:27;;1827:2;1955;1947:6;1944:14;1924:18;1921:38;1918:2;;;1974:18;;:::i;:::-;1918:2;1739:269;;;;:::o;2014:180::-;2062:77;2059:1;2052:88;2159:4;2156:1;2149:15;2183:4;2180:1;2173:15;2200:180;2248:77;2245:1;2238:88;2345:4;2342:1;2335:15;2369:4;2366:1;2359:15;87:1175:4;;;;;;;",
  "deployedSourceMap": "87:1175:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:92:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4097:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4710:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:260:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3254:141:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;122:25:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6202:385:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3580:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:92;2134:13;2162:5;2155:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:92;:::o;4097:174::-;4196:4;4210:39;4219:12;:10;:12::i;:::-;4233:7;4242:6;4210:8;:39::i;:::-;4262:4;4255:11;;4097:174;;;;:::o;3104:100::-;3165:7;3187:12;;3180:19;;3104:100;:::o;4710:426::-;4832:4;4844:36;4854:6;4862:9;4873:6;4844:9;:36::i;:::-;4887:24;4914:11;:19;4926:6;4914:19;;;;;;;;;;;;;;;:33;4934:12;:10;:12::i;:::-;4914:33;;;;;;;;;;;;;;;;4887:60;;4988:6;4968:16;:26;;4953:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5056:57;5065:6;5073:12;:10;:12::i;:::-;5106:6;5087:16;:25;;;;:::i;:::-;5056:8;:57::i;:::-;5127:4;5120:11;;;4710:426;;;;;:::o;2967:85::-;3025:5;3045:2;3038:9;;2967:85;:::o;5505:240::-;5605:4;5619:104;5635:12;:10;:12::i;:::-;5655:7;5707:10;5670:11;:25;5682:12;:10;:12::i;:::-;5670:25;;;;;;;;;;;;;;;:34;5696:7;5670:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5619:8;:104::i;:::-;5736:4;5729:11;;5505:240;;;;:::o;419:260:4:-;489:7;594:12;;;;;;;;;;;:25;;;620:10;640:4;647:6;594:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;671:1;664:8;;419:260;;;;:::o;3254:141:1:-;3348:7;3372:9;:18;3382:7;3372:18;;;;;;;;;;;;;;;;3365:25;;3254:141;;;:::o;2275:96::-;2331:13;2359:7;2352:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:96;:::o;122:25:4:-;;;;;;;;;;;;;:::o;6202:385:1:-;6307:4;6321:24;6348:11;:25;6360:12;:10;:12::i;:::-;6348:25;;;;;;;;;;;;;;;:34;6374:7;6348:34;;;;;;;;;;;;;;;;6321:61;;6423:15;6403:16;:35;;6388:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;6497:67;6506:12;:10;:12::i;:::-;6520:7;6548:15;6529:16;:34;;;;:::i;:::-;6497:8;:67::i;:::-;6578:4;6571:11;;;6202:385;;;;:::o;3580:180::-;3682:4;3696:42;3706:12;:10;:12::i;:::-;3720:9;3731:6;3696:9;:42::i;:::-;3751:4;3744:11;;3580:180;;;;:::o;3810:165::-;3919:7;3943:11;:18;3955:5;3943:18;;;;;;;;;;;;;;;:27;3962:7;3943:27;;;;;;;;;;;;;;;;3936:34;;3810:165;;;;:::o;584:90:0:-;637:7;659:10;652:17;;584:90;:::o;9313:338:1:-;9443:1;9426:19;;:5;:19;;;;9418:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9519:1;9500:21;;:7;:21;;;;9492:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9597:6;9567:11;:18;9579:5;9567:18;;;;;;;;;;;;;;;:27;9586:7;9567:27;;;;;;;;;;;;;;;:36;;;;9630:7;9614:32;;9623:5;9614:32;;;9639:6;9614:32;;;;;;:::i;:::-;;;;;;;;9313:338;;;:::o;7031:574::-;7166:1;7148:20;;:6;:20;;;;7140:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7245:1;7224:23;;:9;:23;;;;7216:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7348:21;7372:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;7348:41;;7420:6;7403:13;:23;;7395:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7511:6;7495:13;:22;;;;:::i;:::-;7475:9;:17;7485:6;7475:17;;;;;;;;;;;;;;;:42;;;;7547:6;7523:9;:20;7533:9;7523:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7582:9;7565:35;;7574:6;7565:35;;;7593:6;7565:35;;;;;;:::i;:::-;;;;;;;;7031:574;;;;:::o;10208:107::-;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:552::-;;;;1263:2;1251:9;1242:7;1238:23;1234:32;1231:2;;;1279:1;1276;1269:12;1231:2;1322:1;1347:53;1392:7;1383:6;1372:9;1368:22;1347:53;:::i;:::-;1337:63;;1293:117;1449:2;1475:53;1520:7;1511:6;1500:9;1496:22;1475:53;:::i;:::-;1465:63;;1420:118;1577:2;1603:53;1648:7;1639:6;1628:9;1624:22;1603:53;:::i;:::-;1593:63;;1548:118;1221:452;;;;;:::o;1679:407::-;;;1804:2;1792:9;1783:7;1779:23;1775:32;1772:2;;;1820:1;1817;1810:12;1772:2;1863:1;1888:53;1933:7;1924:6;1913:9;1909:22;1888:53;:::i;:::-;1878:63;;1834:117;1990:2;2016:53;2061:7;2052:6;2041:9;2037:22;2016:53;:::i;:::-;2006:63;;1961:118;1762:324;;;;;:::o;2092:278::-;;2208:2;2196:9;2187:7;2183:23;2179:32;2176:2;;;2224:1;2221;2214:12;2176:2;2267:1;2292:61;2345:7;2336:6;2325:9;2321:22;2292:61;:::i;:::-;2282:71;;2238:125;2166:204;;;;:::o;2376:407::-;;;2501:2;2489:9;2480:7;2476:23;2472:32;2469:2;;;2517:1;2514;2507:12;2469:2;2560:1;2585:53;2630:7;2621:6;2610:9;2606:22;2585:53;:::i;:::-;2575:63;;2531:117;2687:2;2713:53;2758:7;2749:6;2738:9;2734:22;2713:53;:::i;:::-;2703:63;;2658:118;2459:324;;;;;:::o;2789:118::-;2876:24;2894:5;2876:24;:::i;:::-;2871:3;2864:37;2854:53;;:::o;2913:109::-;2994:21;3009:5;2994:21;:::i;:::-;2989:3;2982:34;2972:50;;:::o;3028:157::-;3128:50;3172:5;3128:50;:::i;:::-;3123:3;3116:63;3106:79;;:::o;3191:364::-;;3307:39;3340:5;3307:39;:::i;:::-;3362:71;3426:6;3421:3;3362:71;:::i;:::-;3355:78;;3442:52;3487:6;3482:3;3475:4;3468:5;3464:16;3442:52;:::i;:::-;3519:29;3541:6;3519:29;:::i;:::-;3514:3;3510:39;3503:46;;3283:272;;;;;:::o;3561:367::-;;3724:67;3788:2;3783:3;3724:67;:::i;:::-;3717:74;;3821:34;3817:1;3812:3;3808:11;3801:55;3887:5;3882:2;3877:3;3873:12;3866:27;3919:2;3914:3;3910:12;3903:19;;3707:221;;;:::o;3934:366::-;;4097:67;4161:2;4156:3;4097:67;:::i;:::-;4090:74;;4194:34;4190:1;4185:3;4181:11;4174:55;4260:4;4255:2;4250:3;4246:12;4239:26;4291:2;4286:3;4282:12;4275:19;;4080:220;;;:::o;4306:370::-;;4469:67;4533:2;4528:3;4469:67;:::i;:::-;4462:74;;4566:34;4562:1;4557:3;4553:11;4546:55;4632:8;4627:2;4622:3;4618:12;4611:30;4667:2;4662:3;4658:12;4651:19;;4452:224;;;:::o;4682:372::-;;4845:67;4909:2;4904:3;4845:67;:::i;:::-;4838:74;;4942:34;4938:1;4933:3;4929:11;4922:55;5008:10;5003:2;4998:3;4994:12;4987:32;5045:2;5040:3;5036:12;5029:19;;4828:226;;;:::o;5060:369::-;;5223:67;5287:2;5282:3;5223:67;:::i;:::-;5216:74;;5320:34;5316:1;5311:3;5307:11;5300:55;5386:7;5381:2;5376:3;5372:12;5365:29;5420:2;5415:3;5411:12;5404:19;;5206:223;;;:::o;5435:368::-;;5598:67;5662:2;5657:3;5598:67;:::i;:::-;5591:74;;5695:34;5691:1;5686:3;5682:11;5675:55;5761:6;5756:2;5751:3;5747:12;5740:28;5794:2;5789:3;5785:12;5778:19;;5581:222;;;:::o;5809:369::-;;5972:67;6036:2;6031:3;5972:67;:::i;:::-;5965:74;;6069:34;6065:1;6060:3;6056:11;6049:55;6135:7;6130:2;6125:3;6121:12;6114:29;6169:2;6164:3;6160:12;6153:19;;5955:223;;;:::o;6184:118::-;6271:24;6289:5;6271:24;:::i;:::-;6266:3;6259:37;6249:53;;:::o;6308:112::-;6391:22;6407:5;6391:22;:::i;:::-;6386:3;6379:35;6369:51;;:::o;6426:442::-;;6613:2;6602:9;6598:18;6590:26;;6626:71;6694:1;6683:9;6679:17;6670:6;6626:71;:::i;:::-;6707:72;6775:2;6764:9;6760:18;6751:6;6707:72;:::i;:::-;6789;6857:2;6846:9;6842:18;6833:6;6789:72;:::i;:::-;6580:288;;;;;;:::o;6874:210::-;;6999:2;6988:9;6984:18;6976:26;;7012:65;7074:1;7063:9;7059:17;7050:6;7012:65;:::i;:::-;6966:118;;;;:::o;7090:248::-;;7234:2;7223:9;7219:18;7211:26;;7247:84;7328:1;7317:9;7313:17;7304:6;7247:84;:::i;:::-;7201:137;;;;:::o;7344:313::-;;7495:2;7484:9;7480:18;7472:26;;7544:9;7538:4;7534:20;7530:1;7519:9;7515:17;7508:47;7572:78;7645:4;7636:6;7572:78;:::i;:::-;7564:86;;7462:195;;;;:::o;7663:419::-;;7867:2;7856:9;7852:18;7844:26;;7916:9;7910:4;7906:20;7902:1;7891:9;7887:17;7880:47;7944:131;8070:4;7944:131;:::i;:::-;7936:139;;7834:248;;;:::o;8088:419::-;;8292:2;8281:9;8277:18;8269:26;;8341:9;8335:4;8331:20;8327:1;8316:9;8312:17;8305:47;8369:131;8495:4;8369:131;:::i;:::-;8361:139;;8259:248;;;:::o;8513:419::-;;8717:2;8706:9;8702:18;8694:26;;8766:9;8760:4;8756:20;8752:1;8741:9;8737:17;8730:47;8794:131;8920:4;8794:131;:::i;:::-;8786:139;;8684:248;;;:::o;8938:419::-;;9142:2;9131:9;9127:18;9119:26;;9191:9;9185:4;9181:20;9177:1;9166:9;9162:17;9155:47;9219:131;9345:4;9219:131;:::i;:::-;9211:139;;9109:248;;;:::o;9363:419::-;;9567:2;9556:9;9552:18;9544:26;;9616:9;9610:4;9606:20;9602:1;9591:9;9587:17;9580:47;9644:131;9770:4;9644:131;:::i;:::-;9636:139;;9534:248;;;:::o;9788:419::-;;9992:2;9981:9;9977:18;9969:26;;10041:9;10035:4;10031:20;10027:1;10016:9;10012:17;10005:47;10069:131;10195:4;10069:131;:::i;:::-;10061:139;;9959:248;;;:::o;10213:419::-;;10417:2;10406:9;10402:18;10394:26;;10466:9;10460:4;10456:20;10452:1;10441:9;10437:17;10430:47;10494:131;10620:4;10494:131;:::i;:::-;10486:139;;10384:248;;;:::o;10638:222::-;;10769:2;10758:9;10754:18;10746:26;;10782:71;10850:1;10839:9;10835:17;10826:6;10782:71;:::i;:::-;10736:124;;;;:::o;10866:214::-;;10993:2;10982:9;10978:18;10970:26;;11006:67;11070:1;11059:9;11055:17;11046:6;11006:67;:::i;:::-;10960:120;;;;:::o;11086:99::-;;11172:5;11166:12;11156:22;;11145:40;;;:::o;11191:169::-;;11309:6;11304:3;11297:19;11349:4;11344:3;11340:14;11325:29;;11287:73;;;;:::o;11366:305::-;;11425:20;11443:1;11425:20;:::i;:::-;11420:25;;11459:20;11477:1;11459:20;:::i;:::-;11454:25;;11613:1;11545:66;11541:74;11538:1;11535:81;11532:2;;;11619:18;;:::i;:::-;11532:2;11663:1;11660;11656:9;11649:16;;11410:261;;;;:::o;11677:191::-;;11737:20;11755:1;11737:20;:::i;:::-;11732:25;;11771:20;11789:1;11771:20;:::i;:::-;11766:25;;11810:1;11807;11804:8;11801:2;;;11815:18;;:::i;:::-;11801:2;11860:1;11857;11853:9;11845:17;;11722:146;;;;:::o;11874:96::-;;11940:24;11958:5;11940:24;:::i;:::-;11929:35;;11919:51;;;:::o;11976:90::-;;12053:5;12046:13;12039:21;12028:32;;12018:48;;;:::o;12072:126::-;;12149:42;12142:5;12138:54;12127:65;;12117:81;;;:::o;12204:77::-;;12270:5;12259:16;;12249:32;;;:::o;12287:86::-;;12362:4;12355:5;12351:16;12340:27;;12330:43;;;:::o;12379:152::-;;12475:50;12519:5;12475:50;:::i;:::-;12462:63;;12452:79;;;:::o;12537:126::-;;12633:24;12651:5;12633:24;:::i;:::-;12620:37;;12610:53;;;:::o;12669:307::-;12737:1;12747:113;12761:6;12758:1;12755:13;12747:113;;;12846:1;12841:3;12837:11;12831:18;12827:1;12822:3;12818:11;12811:39;12783:2;12780:1;12776:10;12771:15;;12747:113;;;12878:6;12875:1;12872:13;12869:2;;;12958:1;12949:6;12944:3;12940:16;12933:27;12869:2;12718:258;;;;:::o;12982:320::-;;13063:1;13057:4;13053:12;13043:22;;13110:1;13104:4;13100:12;13131:18;13121:2;;13187:4;13179:6;13175:17;13165:27;;13121:2;13249;13241:6;13238:14;13218:18;13215:38;13212:2;;;13268:18;;:::i;:::-;13212:2;13033:269;;;;:::o;13308:180::-;13356:77;13353:1;13346:88;13453:4;13450:1;13443:15;13477:4;13474:1;13467:15;13494:180;13542:77;13539:1;13532:88;13639:4;13636:1;13629:15;13663:4;13660:1;13653:15;13680:102;;13772:2;13768:7;13763:2;13756:5;13752:14;13748:28;13738:38;;13728:54;;;:::o;13788:122::-;13861:24;13879:5;13861:24;:::i;:::-;13854:5;13851:35;13841:2;;13900:1;13897;13890:12;13841:2;13831:79;:::o;13916:116::-;13986:21;14001:5;13986:21;:::i;:::-;13979:5;13976:32;13966:2;;14022:1;14019;14012:12;13966:2;13956:76;:::o;14038:122::-;14111:24;14129:5;14111:24;:::i;:::-;14104:5;14101:35;14091:2;;14150:1;14147;14140:12;14091:2;14081:79;:::o",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\n\ncontract YearnVault is ERC20 {\n    ERC20 public underlyToken ;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    constructor() ERC20(\"GameItem\", \"ITM\", 100) public { \n        underlyToken = ERC20(0x82184314D27B9e63Bf16AC2005059086566a9A9f);\n    }\n\n    function deposit(uint256 amount, address recipient) external returns (uint256) {\n        //require(underlyToken.balanceOf(msg.sender) > amount, \"balance not enough\");\n        underlyToken.transferFrom(msg.sender, address(this), amount);\n        return 0;\n    }\n\n    // function withdraw(\n    //     uint256,\n    //     address,\n    //     uint256\n    // ) external returns (uint256);\n\n    // // Returns the amount of underlying per each unit [1e18] of yearn shares\n    // function pricePerShare() external view returns (uint256);\n\n    // function governance() external view returns (address);\n\n    // function setDepositLimit(uint256) external;\n\n    // function totalSupply() external view returns (uint256);\n\n    // function totalAssets() external view returns (uint256);\n\n    // function apiVersion() external view returns (string memory);\n}\n",
  "sourcePath": "/Users/doubled/Desktop/code/YearnVault/contracts/YearnVault.sol",
  "ast": {
    "absolutePath": "/Users/doubled/Desktop/code/YearnVault/contracts/YearnVault.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "ERC20": [
        537
      ],
      "IERC20": [
        615
      ],
      "IERC20Metadata": [
        640
      ],
      "YearnVault": [
        698
      ]
    },
    "id": 699,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "/Users/doubled/Desktop/code/YearnVault/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 538,
        "src": "64:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 644,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 537,
              "src": "110:5:4"
            },
            "id": 645,
            "nodeType": "InheritanceSpecifier",
            "src": "110:5:4"
          }
        ],
        "contractDependencies": [
          22,
          537,
          615,
          640
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 698,
        "linearizedBaseContracts": [
          698,
          537,
          640,
          615,
          22
        ],
        "name": "YearnVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3b921e2",
            "id": 648,
            "mutability": "mutable",
            "name": "underlyToken",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "122:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$537",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 646,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 537,
                "src": "122:5:4"
              },
              "referencedDeclaration": 537,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$537",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 652,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "154:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 651,
              "keyType": {
                "id": 649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "162:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "154:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 650,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 658,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "206:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 657,
              "keyType": {
                "id": 653,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "206:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 656,
                "keyType": {
                  "id": 654,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "225:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 655,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "244:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "331:82:4",
              "statements": [
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 666,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "342:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838323138343331344432374239653633426631364143323030353035393038363536366139413966",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "363:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x82184314D27B9e63Bf16AC2005059086566a9A9f"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 667,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "357:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "357:49:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "342:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "342:64:4"
                }
              ]
            },
            "id": 673,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "47616d654974656d",
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_51b958dd375f8663134c14706470f33acc5af5c390a38836bfdebf4a5baef927",
                      "typeString": "literal_string \"GameItem\""
                    },
                    "value": "GameItem"
                  },
                  {
                    "hexValue": "49544d",
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "312:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_202281f8a4ae5a49297de68adc9a58a6f80307888223482f5fe6c967f9135271",
                      "typeString": "literal_string \"ITM\""
                    },
                    "value": "ITM"
                  },
                  {
                    "hexValue": "313030",
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "319:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  }
                ],
                "id": 664,
                "modifierName": {
                  "id": 660,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "294:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "294:29:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:2:4"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:4"
            },
            "scope": 698,
            "src": "280:133:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "498:181:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "620:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "620:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 689,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "640:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YearnVault_$698",
                              "typeString": "contract YearnVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_YearnVault_$698",
                              "typeString": "contract YearnVault"
                            }
                          ],
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "632:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "632:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "632:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "647:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 682,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "594:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "594:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "594:60:4"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "671:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 681,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "664:8:4"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "436:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "452:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:35:4"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "489:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:9:4"
            },
            "scope": 698,
            "src": "419:260:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 699,
        "src": "87:1175:4"
      }
    ],
    "src": "39:1224:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/doubled/Desktop/code/YearnVault/contracts/YearnVault.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "ERC20": [
        537
      ],
      "IERC20": [
        615
      ],
      "IERC20Metadata": [
        640
      ],
      "YearnVault": [
        698
      ]
    },
    "id": 699,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "/Users/doubled/Desktop/code/YearnVault/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 538,
        "src": "64:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 644,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 537,
              "src": "110:5:4"
            },
            "id": 645,
            "nodeType": "InheritanceSpecifier",
            "src": "110:5:4"
          }
        ],
        "contractDependencies": [
          22,
          537,
          615,
          640
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 698,
        "linearizedBaseContracts": [
          698,
          537,
          640,
          615,
          22
        ],
        "name": "YearnVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3b921e2",
            "id": 648,
            "mutability": "mutable",
            "name": "underlyToken",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "122:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$537",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 646,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 537,
                "src": "122:5:4"
              },
              "referencedDeclaration": 537,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$537",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 652,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "154:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 651,
              "keyType": {
                "id": 649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "162:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "154:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 650,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "173:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 658,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "206:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 657,
              "keyType": {
                "id": 653,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "206:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 656,
                "keyType": {
                  "id": 654,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "225:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 655,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "244:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "331:82:4",
              "statements": [
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 666,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "342:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838323138343331344432374239653633426631364143323030353035393038363536366139413966",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "363:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x82184314D27B9e63Bf16AC2005059086566a9A9f"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 667,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "357:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "357:49:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "342:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "342:64:4"
                }
              ]
            },
            "id": 673,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "47616d654974656d",
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_51b958dd375f8663134c14706470f33acc5af5c390a38836bfdebf4a5baef927",
                      "typeString": "literal_string \"GameItem\""
                    },
                    "value": "GameItem"
                  },
                  {
                    "hexValue": "49544d",
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "312:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_202281f8a4ae5a49297de68adc9a58a6f80307888223482f5fe6c967f9135271",
                      "typeString": "literal_string \"ITM\""
                    },
                    "value": "ITM"
                  },
                  {
                    "hexValue": "313030",
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "319:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  }
                ],
                "id": 664,
                "modifierName": {
                  "id": 660,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "294:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "294:29:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:2:4"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:4"
            },
            "scope": 698,
            "src": "280:133:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "498:181:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "620:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "620:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 689,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "640:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YearnVault_$698",
                              "typeString": "contract YearnVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_YearnVault_$698",
                              "typeString": "contract YearnVault"
                            }
                          ],
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "632:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "632:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "632:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "647:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 682,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "594:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "594:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "594:60:4"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "671:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 681,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "664:8:4"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "436:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "452:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:35:4"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "489:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:9:4"
            },
            "scope": 698,
            "src": "419:260:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 699,
        "src": "87:1175:4"
      }
    ],
    "src": "39:1224:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-08-22T12:33:10.190Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}