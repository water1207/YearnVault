{
  "contractName": "YearnVault",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "show",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minUnderlying",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minUnderlying\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/YearnVault.sol\":\"YearnVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/Context.sol\":{\"keccak256\":\"0x833a5e580ee46dfa7fd04cb7e0155f39b456033549902c5b29000bc94ece2b1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e90697c5902855a8e08e88a6e3444d7472e5692ec0a51b5c5d4c7795cff2864b\",\"dweb:/ipfs/QmdLhgSfvV18xwKMiQ1UoE6pMtGe15BzbAim79vp8jiTTH\"]},\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/ERC20.sol\":{\"keccak256\":\"0x6a08c2080732e6e955e19a9be37969fb7e82133bccc28cfca57e29bb0d3a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57605fe2661f778ec8aec691a6e9628ce6212b70dbb883e8f07d736b6f889f\",\"dweb:/ipfs/QmesoGfe5WuwZtn3S5npUN8r3ZbpTrvL3RraYELYTJuQN9\"]},\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/IERC20.sol\":{\"keccak256\":\"0x4d8e36d9dffc675411042b079c9e27c42200ffa49346f2d9d6067cd2cadf25ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd65357ae8ca0ae2d92682297ccfb834d5dd1e19a8400f18ce2238d906021f7b\",\"dweb:/ipfs/QmYBNa3WMmdHF6fTN25RUE6D8f2AdKXRtfXBpMdGoxpRqR\"]},\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x33ff434f71b5c12d88211ce4f7e59bdf389a962bb2e10f875f9141796ed64621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653015ed27471d302a9c3d2b9a21ca6d16a85fefb7457d07df8ac96bb34e17fa\",\"dweb:/ipfs/QmUHWn1jEkuiAWGL8w9pzcTWDWemWrwcAmMVX6N5mPXZRM\"]},\"/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/YearnVault.sol\":{\"keccak256\":\"0x91a3ab1615eb1a0898f8627026aa545138acd300363f93a6cc76a6016767ca12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d330dc045a56f5ffec6a1f0069c7677af6d70a3b6fa54b2695f61be7b6a2fa7\",\"dweb:/ipfs/Qmci1yq7J8NvAbKVqLAg9UFuCATk5dt4ixQEkUqGZQYRBT\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002540380380620025408339818101604052810190620000379190620003e0565b6040518060400160405280600581526020017f76534346580000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f76534346580000000000000000000000000000000000000000000000000000008152506127108260039080519060200190620000be92919062000319565b508160049080519060200190620000d792919062000319565b50620000f9620000ec620001a760201b60201c565b82620001af60201b60201c565b50505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005f8565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000219906200045f565b60405180910390fd5b62000236600083836200031460201b60201c565b80600260008282546200024a9190620004af565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002a19190620004af565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000308919062000481565b60405180910390a35050565b505050565b82805462000327906200054a565b90600052602060002090601f0160209004810192826200034b576000855562000397565b82601f106200036657805160ff191683800117855562000397565b8280016001018555821562000397579182015b828111156200039657825182559160200191906001019062000379565b5b509050620003a69190620003aa565b5090565b5b80821115620003c5576000816000905550600101620003ab565b5090565b600081519050620003da81620005de565b92915050565b600060208284031215620003f357600080fd5b60006200040384828501620003c9565b91505092915050565b60006200041b601f836200049e565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620004598162000540565b82525050565b600060208201905081810360008301526200047a816200040c565b9050919050565b60006020820190506200049860008301846200044e565b92915050565b600082825260208201905092915050565b6000620004bc8262000540565b9150620004c98362000540565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000501576200050062000580565b5b828201905092915050565b6000620005198262000520565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060028204905060018216806200056357607f821691505b602082108114156200057a5762000579620005af565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620005e9816200050c565b8114620005f557600080fd5b50565b611f3880620006086000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063767800de116100a2578063a9059cbb11610071578063a9059cbb146102e4578063cc80f6f314610314578063d1d80fdf14610332578063dd62ed3e1461034e578063e63697c81461037e5761010b565b8063767800de1461025a57806395d89b4114610278578063a3b921e214610296578063a457c2d7146102b45761010b565b8063313ce567116100de578063313ce567146101ac57806339509351146101ca5780636e553f65146101fa57806370a082311461022a5761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b6101186103ae565b6040516101259190611a78565b60405180910390f35b61014860048036038101906101439190611454565b610440565b6040516101559190611a42565b60405180910390f35b61016661045e565b6040516101739190611bda565b60405180910390f35b61019660048036038101906101919190611405565b610468565b6040516101a39190611a42565b60405180910390f35b6101b4610569565b6040516101c19190611bf5565b60405180910390f35b6101e460048036038101906101df9190611454565b610572565b6040516101f19190611a42565b60405180910390f35b610214600480360381019061020f91906114e2565b61061e565b6040516102219190611bda565b60405180910390f35b610244600480360381019061023f91906113a0565b6106ee565b6040516102519190611bda565b60405180910390f35b610262610736565b60405161026f91906119c7565b60405180910390f35b61028061075c565b60405161028d9190611a78565b60405180910390f35b61029e6107ee565b6040516102ab9190611a5d565b60405180910390f35b6102ce60048036038101906102c99190611454565b610814565b6040516102db9190611a42565b60405180910390f35b6102fe60048036038101906102f99190611454565b610908565b60405161030b9190611a42565b60405180910390f35b61031c610926565b6040516103299190611bda565b60405180910390f35b61034c600480360381019061034791906113a0565b6109cd565b005b610368600480360381019061036391906113c9565b610a74565b6040516103759190611bda565b60405180910390f35b6103986004803603810190610393919061151e565b610afb565b6040516103a59190611bda565b60405180910390f35b6060600380546103bd90611ded565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990611ded565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b5050505050905090565b600061045461044d610bcd565b8484610bd5565b6001905092915050565b6000600254905090565b6000610475848484610da0565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104c0610bcd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790611b1a565b60405180910390fd5b61055d8561054c610bcd565b85846105589190611d0d565b610bd5565b60019150509392505050565b60006012905090565b600061061461057f610bcd565b84846001600061058d610bcd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461060f9190611c2c565b610bd5565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330866040518463ffffffff1660e01b815260040161067f939291906119e2565b602060405180830381600087803b15801561069957600080fd5b505af11580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190611490565b506106e8826002856106e39190611c82565b61101f565b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461076b90611ded565b80601f016020809104026020016040519081016040528092919081815260200182805461079790611ded565b80156107e45780601f106107b9576101008083540402835291602001916107e4565b820191906000526020600020905b8154815290600101906020018083116107c757829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060016000610823610bcd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d790611b9a565b60405180910390fd5b6108fd6108eb610bcd565b8585846108f89190611d0d565b610bd5565b600191505092915050565b600061091c610915610bcd565b8484610da0565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906114b9565b905090565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610b078385611173565b600284610b149190611cb3565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610b73929190611a19565b602060405180830381600087803b158015610b8d57600080fd5b505af1158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc59190611490565b509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3c90611b7a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90611ada565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610d939190611bda565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790611b5a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7790611a9a565b60405180910390fd5b610e8b838383611347565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0890611afa565b60405180910390fd5b8181610f1d9190611d0d565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fad9190611c2c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110119190611bda565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561108f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108690611bba565b60405180910390fd5b61109b60008383611347565b80600260008282546110ad9190611c2c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111029190611c2c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111679190611bda565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111da90611b3a565b60405180910390fd5b6111ef82600083611347565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c90611aba565b60405180910390fd5b81816112819190611d0d565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546112d59190611d0d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161133a9190611bda565b60405180910390a3505050565b505050565b60008135905061135b81611ebd565b92915050565b60008151905061137081611ed4565b92915050565b60008135905061138581611eeb565b92915050565b60008151905061139a81611eeb565b92915050565b6000602082840312156113b257600080fd5b60006113c08482850161134c565b91505092915050565b600080604083850312156113dc57600080fd5b60006113ea8582860161134c565b92505060206113fb8582860161134c565b9150509250929050565b60008060006060848603121561141a57600080fd5b60006114288682870161134c565b93505060206114398682870161134c565b925050604061144a86828701611376565b9150509250925092565b6000806040838503121561146757600080fd5b60006114758582860161134c565b925050602061148685828601611376565b9150509250929050565b6000602082840312156114a257600080fd5b60006114b084828501611361565b91505092915050565b6000602082840312156114cb57600080fd5b60006114d98482850161138b565b91505092915050565b600080604083850312156114f557600080fd5b600061150385828601611376565b92505060206115148582860161134c565b9150509250929050565b60008060006060848603121561153357600080fd5b600061154186828701611376565b93505060206115528682870161134c565b925050604061156386828701611376565b9150509250925092565b61157681611d41565b82525050565b61158581611d53565b82525050565b61159481611d96565b82525050565b60006115a582611c10565b6115af8185611c1b565b93506115bf818560208601611dba565b6115c881611eac565b840191505092915050565b60006115e0602383611c1b565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611646602283611c1b565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ac602283611c1b565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611712602683611c1b565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611778602883611c1b565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117de602183611c1b565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611844602583611c1b565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118aa602483611c1b565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611910602583611c1b565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611976601f83611c1b565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6119b281611d7f565b82525050565b6119c181611d89565b82525050565b60006020820190506119dc600083018461156d565b92915050565b60006060820190506119f7600083018661156d565b611a04602083018561156d565b611a1160408301846119a9565b949350505050565b6000604082019050611a2e600083018561156d565b611a3b60208301846119a9565b9392505050565b6000602082019050611a57600083018461157c565b92915050565b6000602082019050611a72600083018461158b565b92915050565b60006020820190508181036000830152611a92818461159a565b905092915050565b60006020820190508181036000830152611ab3816115d3565b9050919050565b60006020820190508181036000830152611ad381611639565b9050919050565b60006020820190508181036000830152611af38161169f565b9050919050565b60006020820190508181036000830152611b1381611705565b9050919050565b60006020820190508181036000830152611b338161176b565b9050919050565b60006020820190508181036000830152611b53816117d1565b9050919050565b60006020820190508181036000830152611b7381611837565b9050919050565b60006020820190508181036000830152611b938161189d565b9050919050565b60006020820190508181036000830152611bb381611903565b9050919050565b60006020820190508181036000830152611bd381611969565b9050919050565b6000602082019050611bef60008301846119a9565b92915050565b6000602082019050611c0a60008301846119b8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611c3782611d7f565b9150611c4283611d7f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c7757611c76611e1f565b5b828201905092915050565b6000611c8d82611d7f565b9150611c9883611d7f565b925082611ca857611ca7611e4e565b5b828204905092915050565b6000611cbe82611d7f565b9150611cc983611d7f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d0257611d01611e1f565b5b828202905092915050565b6000611d1882611d7f565b9150611d2383611d7f565b925082821015611d3657611d35611e1f565b5b828203905092915050565b6000611d4c82611d5f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611da182611da8565b9050919050565b6000611db382611d5f565b9050919050565b60005b83811015611dd8578082015181840152602081019050611dbd565b83811115611de7576000848401525b50505050565b60006002820490506001821680611e0557607f821691505b60208210811415611e1957611e18611e7d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611ec681611d41565b8114611ed157600080fd5b50565b611edd81611d53565b8114611ee857600080fd5b50565b611ef481611d7f565b8114611eff57600080fd5b5056fea2646970667358221220b1958991b846f897317d81dfcca8c88eb368c7ef56b82c7aa4ffa41ab024a70364736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "87:1607:4:-:0;;;305:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1845:178:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:5:4;1952::1;1944;:13;;;;;;;;;;;;:::i;:::-;;1973:7;1963;:17;;;;;;;;;;;;:::i;:::-;;1986:32;1992:12;:10;;;:12;;:::i;:::-;2006:11;1986:5;;;:32;;:::i;:::-;1845:178;;;388:5:4::1;381:4;;:12;;;;;;;;;;;;;;;;;;424:4;;;;;;;;;;;403:12;;:26;;;;;;;;;;;;;;;;;;305:131:::0;87:1607;;584:90:0;637:7;659:10;652:17;;584:90;:::o;7861:308:1:-;7959:1;7940:21;;:7;:21;;;;7932:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8004:49;8033:1;8037:7;8046:6;8004:20;;;:49;;:::i;:::-;8076:6;8060:12;;:22;;;;;;;:::i;:::-;;;;;;;;8110:6;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8148:7;8127:37;;8144:1;8127:37;;;8157:6;8127:37;;;;;;:::i;:::-;;;;;;;;7861:308;;:::o;10208:107::-;;;;:::o;87:1607:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:5:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:329::-;;609:67;673:2;668:3;609:67;:::i;:::-;602:74;;706:33;702:1;697:3;693:11;686:54;766:2;761:3;757:12;750:19;;592:183;;;:::o;781:118::-;868:24;886:5;868:24;:::i;:::-;863:3;856:37;846:53;;:::o;905:419::-;;1109:2;1098:9;1094:18;1086:26;;1158:9;1152:4;1148:20;1144:1;1133:9;1129:17;1122:47;1186:131;1312:4;1186:131;:::i;:::-;1178:139;;1076:248;;;:::o;1330:222::-;;1461:2;1450:9;1446:18;1438:26;;1474:71;1542:1;1531:9;1527:17;1518:6;1474:71;:::i;:::-;1428:124;;;;:::o;1558:169::-;;1676:6;1671:3;1664:19;1716:4;1711:3;1707:14;1692:29;;1654:73;;;;:::o;1733:305::-;;1792:20;1810:1;1792:20;:::i;:::-;1787:25;;1826:20;1844:1;1826:20;:::i;:::-;1821:25;;1980:1;1912:66;1908:74;1905:1;1902:81;1899:2;;;1986:18;;:::i;:::-;1899:2;2030:1;2027;2023:9;2016:16;;1777:261;;;;:::o;2044:96::-;;2110:24;2128:5;2110:24;:::i;:::-;2099:35;;2089:51;;;:::o;2146:126::-;;2223:42;2216:5;2212:54;2201:65;;2191:81;;;:::o;2278:77::-;;2344:5;2333:16;;2323:32;;;:::o;2361:320::-;;2442:1;2436:4;2432:12;2422:22;;2489:1;2483:4;2479:12;2510:18;2500:2;;2566:4;2558:6;2554:17;2544:27;;2500:2;2628;2620:6;2617:14;2597:18;2594:38;2591:2;;;2647:18;;:::i;:::-;2591:2;2412:269;;;;:::o;2687:180::-;2735:77;2732:1;2725:88;2832:4;2829:1;2822:15;2856:4;2853:1;2846:15;2873:180;2921:77;2918:1;2911:88;3018:4;3015:1;3008:15;3042:4;3039:1;3032:15;3059:122;3132:24;3150:5;3132:24;:::i;:::-;3125:5;3122:35;3112:2;;3171:1;3168;3161:12;3112:2;3102:79;:::o;87:1607:4:-;;;;;;;",
  "deployedSourceMap": "87:1607:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:92:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4097:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4710:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;652:279:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3254:141:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;154:19:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:96:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;122:25:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6202:385:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3580:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:94:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:165:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:297:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:92:1;2134:13;2162:5;2155:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:92;:::o;4097:174::-;4196:4;4210:39;4219:12;:10;:12::i;:::-;4233:7;4242:6;4210:8;:39::i;:::-;4262:4;4255:11;;4097:174;;;;:::o;3104:100::-;3165:7;3187:12;;3180:19;;3104:100;:::o;4710:426::-;4832:4;4844:36;4854:6;4862:9;4873:6;4844:9;:36::i;:::-;4887:24;4914:11;:19;4926:6;4914:19;;;;;;;;;;;;;;;:33;4934:12;:10;:12::i;:::-;4914:33;;;;;;;;;;;;;;;;4887:60;;4988:6;4968:16;:26;;4953:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5056:57;5065:6;5073:12;:10;:12::i;:::-;5106:6;5087:16;:25;;;;:::i;:::-;5056:8;:57::i;:::-;5127:4;5120:11;;;4710:426;;;;;:::o;2967:85::-;3025:5;3045:2;3038:9;;2967:85;:::o;5505:240::-;5605:4;5619:104;5635:12;:10;:12::i;:::-;5655:7;5707:10;5670:11;:25;5682:12;:10;:12::i;:::-;5670:25;;;;;;;;;;;;;;;:34;5696:7;5670:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5619:8;:104::i;:::-;5736:4;5729:11;;5505:240;;;;:::o;652:279:4:-;722:7;827:12;;;;;;;;;;;:25;;;853:9;872:4;879:6;827:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;896:28;902:9;922:1;913:6;:10;;;;:::i;:::-;896:5;:28::i;:::-;652:279;;;;:::o;3254:141:1:-;3348:7;3372:9;:18;3382:7;3372:18;;;;;;;;;;;;;;;;3365:25;;3254:141;;;:::o;154:19:4:-;;;;;;;;;;;;;:::o;2275:96:1:-;2331:13;2359:7;2352:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:96;:::o;122:25:4:-;;;;;;;;;;;;;:::o;6202:385:1:-;6307:4;6321:24;6348:11;:25;6360:12;:10;:12::i;:::-;6348:25;;;;;;;;;;;;;;;:34;6374:7;6348:34;;;;;;;;;;;;;;;;6321:61;;6423:15;6403:16;:35;;6388:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;6497:67;6506:12;:10;:12::i;:::-;6520:7;6548:15;6529:16;:34;;;;:::i;:::-;6497:8;:67::i;:::-;6578:4;6571:11;;;6202:385;;;;:::o;3580:180::-;3682:4;3696:42;3706:12;:10;:12::i;:::-;3720:9;3731:6;3696:9;:42::i;:::-;3751:4;3744:11;;3580:180;;;;:::o;552:94:4:-;588:7;613:12;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;606:33;;552:94;:::o;442:104::-;498:5;491:4;;:12;;;;;;;;;;;;;;;;;;534:4;;;;;;;;;;;513:12;;:26;;;;;;;;;;;;;;;;;;442:104;:::o;3810:165:1:-;3919:7;3943:11;:18;3955:5;3943:18;;;;;;;;;;;;;;;:27;3962:7;3943:27;;;;;;;;;;;;;;;;3936:34;;3810:165;;;;:::o;937:297:4:-;1066:14;1092:28;1098:12;1112:7;1092:5;:28::i;:::-;1149:1;1139:7;:11;;;;:::i;:::-;1130:20;;1160:12;;;;;;;;;;;:21;;;1182:12;1197:6;1160:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;937:297;;;;;:::o;584:90:0:-;637:7;659:10;652:17;;584:90;:::o;9313:338:1:-;9443:1;9426:19;;:5;:19;;;;9418:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9519:1;9500:21;;:7;:21;;;;9492:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9597:6;9567:11;:18;9579:5;9567:18;;;;;;;;;;;;;;;:27;9586:7;9567:27;;;;;;;;;;;;;;;:36;;;;9630:7;9614:32;;9623:5;9614:32;;;9639:6;9614:32;;;;;;:::i;:::-;;;;;;;;9313:338;;;:::o;7031:574::-;7166:1;7148:20;;:6;:20;;;;7140:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7245:1;7224:23;;:9;:23;;;;7216:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7348:21;7372:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;7348:41;;7420:6;7403:13;:23;;7395:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7511:6;7495:13;:22;;;;:::i;:::-;7475:9;:17;7485:6;7475:17;;;;;;;;;;;;;;;:42;;;;7547:6;7523:9;:20;7533:9;7523:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7582:9;7565:35;;7574:6;7565:35;;;7593:6;7565:35;;;;;;:::i;:::-;;;;;;;;7031:574;;;;:::o;7861:308::-;7959:1;7940:21;;:7;:21;;;;7932:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8004:49;8033:1;8037:7;8046:6;8004:20;:49::i;:::-;8076:6;8060:12;;:22;;;;;;;:::i;:::-;;;;;;;;8110:6;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8148:7;8127:37;;8144:1;8127:37;;;8157:6;8127:37;;;;;;:::i;:::-;;;;;;;;7861:308;;:::o;8465:453::-;8563:1;8544:21;;:7;:21;;;;8536:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8610:49;8631:7;8648:1;8652:6;8610:20;:49::i;:::-;8666:22;8691:9;:18;8701:7;8691:18;;;;;;;;;;;;;;;;8666:43;;8741:6;8723:14;:24;;8715:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8830:6;8813:14;:23;;;;:::i;:::-;8792:9;:18;8802:7;8792:18;;;;;;;;;;;;;;;:44;;;;8858:6;8842:12;;:22;;;;;;;:::i;:::-;;;;;;;;8902:1;8876:37;;8885:7;8876:37;;;8906:6;8876:37;;;;;;:::i;:::-;;;;;;;;8465:453;;;:::o;10208:107::-;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:407::-;;;982:2;970:9;961:7;957:23;953:32;950:2;;;998:1;995;988:12;950:2;1041:1;1066:53;1111:7;1102:6;1091:9;1087:22;1066:53;:::i;:::-;1056:63;;1012:117;1168:2;1194:53;1239:7;1230:6;1219:9;1215:22;1194:53;:::i;:::-;1184:63;;1139:118;940:324;;;;;:::o;1270:552::-;;;;1412:2;1400:9;1391:7;1387:23;1383:32;1380:2;;;1428:1;1425;1418:12;1380:2;1471:1;1496:53;1541:7;1532:6;1521:9;1517:22;1496:53;:::i;:::-;1486:63;;1442:117;1598:2;1624:53;1669:7;1660:6;1649:9;1645:22;1624:53;:::i;:::-;1614:63;;1569:118;1726:2;1752:53;1797:7;1788:6;1777:9;1773:22;1752:53;:::i;:::-;1742:63;;1697:118;1370:452;;;;;:::o;1828:407::-;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2012:1;2037:53;2082:7;2073:6;2062:9;2058:22;2037:53;:::i;:::-;2027:63;;1983:117;2139:2;2165:53;2210:7;2201:6;2190:9;2186:22;2165:53;:::i;:::-;2155:63;;2110:118;1911:324;;;;;:::o;2241:278::-;;2357:2;2345:9;2336:7;2332:23;2328:32;2325:2;;;2373:1;2370;2363:12;2325:2;2416:1;2441:61;2494:7;2485:6;2474:9;2470:22;2441:61;:::i;:::-;2431:71;;2387:125;2315:204;;;;:::o;2525:284::-;;2644:2;2632:9;2623:7;2619:23;2615:32;2612:2;;;2660:1;2657;2650:12;2612:2;2703:1;2728:64;2784:7;2775:6;2764:9;2760:22;2728:64;:::i;:::-;2718:74;;2674:128;2602:207;;;;:::o;2815:407::-;;;2940:2;2928:9;2919:7;2915:23;2911:32;2908:2;;;2956:1;2953;2946:12;2908:2;2999:1;3024:53;3069:7;3060:6;3049:9;3045:22;3024:53;:::i;:::-;3014:63;;2970:117;3126:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;:::i;:::-;3142:63;;3097:118;2898:324;;;;;:::o;3228:552::-;;;;3370:2;3358:9;3349:7;3345:23;3341:32;3338:2;;;3386:1;3383;3376:12;3338:2;3429:1;3454:53;3499:7;3490:6;3479:9;3475:22;3454:53;:::i;:::-;3444:63;;3400:117;3556:2;3582:53;3627:7;3618:6;3607:9;3603:22;3582:53;:::i;:::-;3572:63;;3527:118;3684:2;3710:53;3755:7;3746:6;3735:9;3731:22;3710:53;:::i;:::-;3700:63;;3655:118;3328:452;;;;;:::o;3786:118::-;3873:24;3891:5;3873:24;:::i;:::-;3868:3;3861:37;3851:53;;:::o;3910:109::-;3991:21;4006:5;3991:21;:::i;:::-;3986:3;3979:34;3969:50;;:::o;4025:157::-;4125:50;4169:5;4125:50;:::i;:::-;4120:3;4113:63;4103:79;;:::o;4188:364::-;;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:52;4484:6;4479:3;4472:4;4465:5;4461:16;4439:52;:::i;:::-;4516:29;4538:6;4516:29;:::i;:::-;4511:3;4507:39;4500:46;;4280:272;;;;;:::o;4558:367::-;;4721:67;4785:2;4780:3;4721:67;:::i;:::-;4714:74;;4818:34;4814:1;4809:3;4805:11;4798:55;4884:5;4879:2;4874:3;4870:12;4863:27;4916:2;4911:3;4907:12;4900:19;;4704:221;;;:::o;4931:366::-;;5094:67;5158:2;5153:3;5094:67;:::i;:::-;5087:74;;5191:34;5187:1;5182:3;5178:11;5171:55;5257:4;5252:2;5247:3;5243:12;5236:26;5288:2;5283:3;5279:12;5272:19;;5077:220;;;:::o;5303:366::-;;5466:67;5530:2;5525:3;5466:67;:::i;:::-;5459:74;;5563:34;5559:1;5554:3;5550:11;5543:55;5629:4;5624:2;5619:3;5615:12;5608:26;5660:2;5655:3;5651:12;5644:19;;5449:220;;;:::o;5675:370::-;;5838:67;5902:2;5897:3;5838:67;:::i;:::-;5831:74;;5935:34;5931:1;5926:3;5922:11;5915:55;6001:8;5996:2;5991:3;5987:12;5980:30;6036:2;6031:3;6027:12;6020:19;;5821:224;;;:::o;6051:372::-;;6214:67;6278:2;6273:3;6214:67;:::i;:::-;6207:74;;6311:34;6307:1;6302:3;6298:11;6291:55;6377:10;6372:2;6367:3;6363:12;6356:32;6414:2;6409:3;6405:12;6398:19;;6197:226;;;:::o;6429:365::-;;6592:67;6656:2;6651:3;6592:67;:::i;:::-;6585:74;;6689:34;6685:1;6680:3;6676:11;6669:55;6755:3;6750:2;6745:3;6741:12;6734:25;6785:2;6780:3;6776:12;6769:19;;6575:219;;;:::o;6800:369::-;;6963:67;7027:2;7022:3;6963:67;:::i;:::-;6956:74;;7060:34;7056:1;7051:3;7047:11;7040:55;7126:7;7121:2;7116:3;7112:12;7105:29;7160:2;7155:3;7151:12;7144:19;;6946:223;;;:::o;7175:368::-;;7338:67;7402:2;7397:3;7338:67;:::i;:::-;7331:74;;7435:34;7431:1;7426:3;7422:11;7415:55;7501:6;7496:2;7491:3;7487:12;7480:28;7534:2;7529:3;7525:12;7518:19;;7321:222;;;:::o;7549:369::-;;7712:67;7776:2;7771:3;7712:67;:::i;:::-;7705:74;;7809:34;7805:1;7800:3;7796:11;7789:55;7875:7;7870:2;7865:3;7861:12;7854:29;7909:2;7904:3;7900:12;7893:19;;7695:223;;;:::o;7924:329::-;;8087:67;8151:2;8146:3;8087:67;:::i;:::-;8080:74;;8184:33;8180:1;8175:3;8171:11;8164:54;8244:2;8239:3;8235:12;8228:19;;8070:183;;;:::o;8259:118::-;8346:24;8364:5;8346:24;:::i;:::-;8341:3;8334:37;8324:53;;:::o;8383:112::-;8466:22;8482:5;8466:22;:::i;:::-;8461:3;8454:35;8444:51;;:::o;8501:222::-;;8632:2;8621:9;8617:18;8609:26;;8645:71;8713:1;8702:9;8698:17;8689:6;8645:71;:::i;:::-;8599:124;;;;:::o;8729:442::-;;8916:2;8905:9;8901:18;8893:26;;8929:71;8997:1;8986:9;8982:17;8973:6;8929:71;:::i;:::-;9010:72;9078:2;9067:9;9063:18;9054:6;9010:72;:::i;:::-;9092;9160:2;9149:9;9145:18;9136:6;9092:72;:::i;:::-;8883:288;;;;;;:::o;9177:332::-;;9336:2;9325:9;9321:18;9313:26;;9349:71;9417:1;9406:9;9402:17;9393:6;9349:71;:::i;:::-;9430:72;9498:2;9487:9;9483:18;9474:6;9430:72;:::i;:::-;9303:206;;;;;:::o;9515:210::-;;9640:2;9629:9;9625:18;9617:26;;9653:65;9715:1;9704:9;9700:17;9691:6;9653:65;:::i;:::-;9607:118;;;;:::o;9731:248::-;;9875:2;9864:9;9860:18;9852:26;;9888:84;9969:1;9958:9;9954:17;9945:6;9888:84;:::i;:::-;9842:137;;;;:::o;9985:313::-;;10136:2;10125:9;10121:18;10113:26;;10185:9;10179:4;10175:20;10171:1;10160:9;10156:17;10149:47;10213:78;10286:4;10277:6;10213:78;:::i;:::-;10205:86;;10103:195;;;;:::o;10304:419::-;;10508:2;10497:9;10493:18;10485:26;;10557:9;10551:4;10547:20;10543:1;10532:9;10528:17;10521:47;10585:131;10711:4;10585:131;:::i;:::-;10577:139;;10475:248;;;:::o;10729:419::-;;10933:2;10922:9;10918:18;10910:26;;10982:9;10976:4;10972:20;10968:1;10957:9;10953:17;10946:47;11010:131;11136:4;11010:131;:::i;:::-;11002:139;;10900:248;;;:::o;11154:419::-;;11358:2;11347:9;11343:18;11335:26;;11407:9;11401:4;11397:20;11393:1;11382:9;11378:17;11371:47;11435:131;11561:4;11435:131;:::i;:::-;11427:139;;11325:248;;;:::o;11579:419::-;;11783:2;11772:9;11768:18;11760:26;;11832:9;11826:4;11822:20;11818:1;11807:9;11803:17;11796:47;11860:131;11986:4;11860:131;:::i;:::-;11852:139;;11750:248;;;:::o;12004:419::-;;12208:2;12197:9;12193:18;12185:26;;12257:9;12251:4;12247:20;12243:1;12232:9;12228:17;12221:47;12285:131;12411:4;12285:131;:::i;:::-;12277:139;;12175:248;;;:::o;12429:419::-;;12633:2;12622:9;12618:18;12610:26;;12682:9;12676:4;12672:20;12668:1;12657:9;12653:17;12646:47;12710:131;12836:4;12710:131;:::i;:::-;12702:139;;12600:248;;;:::o;12854:419::-;;13058:2;13047:9;13043:18;13035:26;;13107:9;13101:4;13097:20;13093:1;13082:9;13078:17;13071:47;13135:131;13261:4;13135:131;:::i;:::-;13127:139;;13025:248;;;:::o;13279:419::-;;13483:2;13472:9;13468:18;13460:26;;13532:9;13526:4;13522:20;13518:1;13507:9;13503:17;13496:47;13560:131;13686:4;13560:131;:::i;:::-;13552:139;;13450:248;;;:::o;13704:419::-;;13908:2;13897:9;13893:18;13885:26;;13957:9;13951:4;13947:20;13943:1;13932:9;13928:17;13921:47;13985:131;14111:4;13985:131;:::i;:::-;13977:139;;13875:248;;;:::o;14129:419::-;;14333:2;14322:9;14318:18;14310:26;;14382:9;14376:4;14372:20;14368:1;14357:9;14353:17;14346:47;14410:131;14536:4;14410:131;:::i;:::-;14402:139;;14300:248;;;:::o;14554:222::-;;14685:2;14674:9;14670:18;14662:26;;14698:71;14766:1;14755:9;14751:17;14742:6;14698:71;:::i;:::-;14652:124;;;;:::o;14782:214::-;;14909:2;14898:9;14894:18;14886:26;;14922:67;14986:1;14975:9;14971:17;14962:6;14922:67;:::i;:::-;14876:120;;;;:::o;15002:99::-;;15088:5;15082:12;15072:22;;15061:40;;;:::o;15107:169::-;;15225:6;15220:3;15213:19;15265:4;15260:3;15256:14;15241:29;;15203:73;;;;:::o;15282:305::-;;15341:20;15359:1;15341:20;:::i;:::-;15336:25;;15375:20;15393:1;15375:20;:::i;:::-;15370:25;;15529:1;15461:66;15457:74;15454:1;15451:81;15448:2;;;15535:18;;:::i;:::-;15448:2;15579:1;15576;15572:9;15565:16;;15326:261;;;;:::o;15593:185::-;;15650:20;15668:1;15650:20;:::i;:::-;15645:25;;15684:20;15702:1;15684:20;:::i;:::-;15679:25;;15723:1;15713:2;;15728:18;;:::i;:::-;15713:2;15770:1;15767;15763:9;15758:14;;15635:143;;;;:::o;15784:348::-;;15847:20;15865:1;15847:20;:::i;:::-;15842:25;;15881:20;15899:1;15881:20;:::i;:::-;15876:25;;16069:1;16001:66;15997:74;15994:1;15991:81;15986:1;15979:9;15972:17;15968:105;15965:2;;;16076:18;;:::i;:::-;15965:2;16124:1;16121;16117:9;16106:20;;15832:300;;;;:::o;16138:191::-;;16198:20;16216:1;16198:20;:::i;:::-;16193:25;;16232:20;16250:1;16232:20;:::i;:::-;16227:25;;16271:1;16268;16265:8;16262:2;;;16276:18;;:::i;:::-;16262:2;16321:1;16318;16314:9;16306:17;;16183:146;;;;:::o;16335:96::-;;16401:24;16419:5;16401:24;:::i;:::-;16390:35;;16380:51;;;:::o;16437:90::-;;16514:5;16507:13;16500:21;16489:32;;16479:48;;;:::o;16533:126::-;;16610:42;16603:5;16599:54;16588:65;;16578:81;;;:::o;16665:77::-;;16731:5;16720:16;;16710:32;;;:::o;16748:86::-;;16823:4;16816:5;16812:16;16801:27;;16791:43;;;:::o;16840:152::-;;16936:50;16980:5;16936:50;:::i;:::-;16923:63;;16913:79;;;:::o;16998:126::-;;17094:24;17112:5;17094:24;:::i;:::-;17081:37;;17071:53;;;:::o;17130:307::-;17198:1;17208:113;17222:6;17219:1;17216:13;17208:113;;;17307:1;17302:3;17298:11;17292:18;17288:1;17283:3;17279:11;17272:39;17244:2;17241:1;17237:10;17232:15;;17208:113;;;17339:6;17336:1;17333:13;17330:2;;;17419:1;17410:6;17405:3;17401:16;17394:27;17330:2;17179:258;;;;:::o;17443:320::-;;17524:1;17518:4;17514:12;17504:22;;17571:1;17565:4;17561:12;17592:18;17582:2;;17648:4;17640:6;17636:17;17626:27;;17582:2;17710;17702:6;17699:14;17679:18;17676:38;17673:2;;;17729:18;;:::i;:::-;17673:2;17494:269;;;;:::o;17769:180::-;17817:77;17814:1;17807:88;17914:4;17911:1;17904:15;17938:4;17935:1;17928:15;17955:180;18003:77;18000:1;17993:88;18100:4;18097:1;18090:15;18124:4;18121:1;18114:15;18141:180;18189:77;18186:1;18179:88;18286:4;18283:1;18276:15;18310:4;18307:1;18300:15;18327:102;;18419:2;18415:7;18410:2;18403:5;18399:14;18395:28;18385:38;;18375:54;;;:::o;18435:122::-;18508:24;18526:5;18508:24;:::i;:::-;18501:5;18498:35;18488:2;;18547:1;18544;18537:12;18488:2;18478:79;:::o;18563:116::-;18633:21;18648:5;18633:21;:::i;:::-;18626:5;18623:32;18613:2;;18669:1;18666;18659:12;18613:2;18603:76;:::o;18685:122::-;18758:24;18776:5;18758:24;:::i;:::-;18751:5;18748:35;18738:2;;18797:1;18794;18787:12;18738:2;18728:79;:::o",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\n\ncontract YearnVault is ERC20 {\n    ERC20 public underlyToken ;\n    address public addr;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    constructor(address _addr) ERC20(\"vSCFX\", \"vSCFX\", 10000) public { \n        addr = _addr;\n        underlyToken = ERC20(addr);\n    }\n\n    function setAddr(address _addr) public {\n        addr = _addr;\n        underlyToken = ERC20(addr);\n    }\n\n    function show() public view returns(uint256){\n        return underlyToken.totalSupply();\n    }\n\n    function deposit(uint256 amount, address recipient) external returns (uint256) {\n        //require(underlyToken.balanceOf(msg.sender) > amount, \"balance not enough\");\n        underlyToken.transferFrom(recipient, address(this), amount);\n        _mint(recipient, amount / 2);\n    }\n\n    function withdraw(\n        uint256 _amount,\n        address _destination,\n        uint256 _minUnderlying\n    ) external returns (uint256 shares) {\n        _burn(_destination, _amount);\n        shares = _amount * 2;\n        underlyToken.transfer(_destination,  shares);\n        return shares;\n    }\n\n    // // Returns the amount of underlying per each unit [1e18] of yearn shares\n    // function pricePerShare() external view returns (uint256);\n\n    // function governance() external view returns (address);\n\n    // function setDepositLimit(uint256) external;\n\n    // function totalSupply() external view returns (uint256);\n\n    // function totalAssets() external view returns (uint256);\n\n    // function apiVersion() external view returns (string memory);\n}\n",
  "sourcePath": "/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/YearnVault.sol",
  "ast": {
    "absolutePath": "/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/YearnVault.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "ERC20": [
        537
      ],
      "IERC20": [
        615
      ],
      "IERC20Metadata": [
        640
      ],
      "YearnVault": [
        768
      ]
    },
    "id": 769,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 769,
        "sourceUnit": 538,
        "src": "64:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 644,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 537,
              "src": "110:5:4"
            },
            "id": 645,
            "nodeType": "InheritanceSpecifier",
            "src": "110:5:4"
          }
        ],
        "contractDependencies": [
          22,
          537,
          615,
          640
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 768,
        "linearizedBaseContracts": [
          768,
          537,
          640,
          615,
          22
        ],
        "name": "YearnVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3b921e2",
            "id": 648,
            "mutability": "mutable",
            "name": "underlyToken",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "122:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$537",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 646,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 537,
                "src": "122:5:4"
              },
              "referencedDeclaration": 537,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$537",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "767800de",
            "id": 650,
            "mutability": "mutable",
            "name": "addr",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "154:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 649,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 654,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "179:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 653,
              "keyType": {
                "id": 651,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "187:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "179:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 652,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "198:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 660,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "231:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 659,
              "keyType": {
                "id": 655,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "231:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 658,
                "keyType": {
                  "id": 656,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "258:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "250:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 657,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "370:66:4",
              "statements": [
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 670,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "381:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 671,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "388:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "381:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "381:12:4"
                },
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 674,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "403:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 676,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "424:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 675,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "418:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "418:11:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "403:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "403:26:4"
                }
              ]
            },
            "id": 681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "7653434658",
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10f38e2c55d617184355edd660ad6b214e4e3f87742bea766975fdc1b5e7dcd3",
                      "typeString": "literal_string \"vSCFX\""
                    },
                    "value": "vSCFX"
                  },
                  {
                    "hexValue": "7653434658",
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "347:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10f38e2c55d617184355edd660ad6b214e4e3f87742bea766975fdc1b5e7dcd3",
                      "typeString": "literal_string \"vSCFX\""
                    },
                    "value": "vSCFX"
                  },
                  {
                    "hexValue": "3130303030",
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "356:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  }
                ],
                "id": 668,
                "modifierName": {
                  "id": 664,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "332:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "332:30:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "317:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "316:15:4"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:4"
            },
            "scope": 768,
            "src": "305:131:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "481:65:4",
              "statements": [
                {
                  "expression": {
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 686,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "491:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 687,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "498:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "491:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "491:12:4"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 690,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "513:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 692,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "534:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 691,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "528:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "528:11:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "513:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "513:26:4"
                }
              ]
            },
            "functionSelector": "d1d80fdf",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddr",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "459:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:15:4"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:4"
            },
            "scope": 768,
            "src": "442:104:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "596:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 702,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "613:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "613:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 701,
                  "id": 705,
                  "nodeType": "Return",
                  "src": "606:33:4"
                }
              ]
            },
            "functionSelector": "cc80f6f3",
            "id": 707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "show",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:4"
            },
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "588:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "587:9:4"
            },
            "scope": 768,
            "src": "552:94:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "731:200:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "853:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 722,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "872:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YearnVault_$768",
                              "typeString": "contract YearnVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_YearnVault_$768",
                              "typeString": "contract YearnVault"
                            }
                          ],
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "864:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 720,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "864:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 724,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "879:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 716,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "827:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "827:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "827:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 728,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "902:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 729,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "913:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "922:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "913:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "896:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "896:28:4"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "669:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "685:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:35:4"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "722:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:9:4"
            },
            "scope": 768,
            "src": "652:279:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "1082:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 747,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1098:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 748,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1112:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 746,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1092:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:28:4"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 751,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "1130:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 752,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1139:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1149:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1139:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1130:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:20:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1182:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 761,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "1197:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 757,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1160:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "1160:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:44:4"
                },
                {
                  "expression": {
                    "id": 764,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 744,
                    "src": "1221:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 745,
                  "id": 765,
                  "nodeType": "Return",
                  "src": "1214:13:4"
                }
              ]
            },
            "functionSelector": "e63697c8",
            "id": 767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "964:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "989:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "_minUnderlying",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "1019:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:93:4"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "1066:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:16:4"
            },
            "scope": 768,
            "src": "937:297:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 769,
        "src": "87:1607:4"
      }
    ],
    "src": "39:1656:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/YearnVault.sol",
    "exportedSymbols": {
      "Context": [
        22
      ],
      "ERC20": [
        537
      ],
      "IERC20": [
        615
      ],
      "IERC20Metadata": [
        640
      ],
      "YearnVault": [
        768
      ]
    },
    "id": 769,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "/Users/doubled/Desktop/code/Conflux UMA/YearnVault/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 769,
        "sourceUnit": 538,
        "src": "64:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 644,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 537,
              "src": "110:5:4"
            },
            "id": 645,
            "nodeType": "InheritanceSpecifier",
            "src": "110:5:4"
          }
        ],
        "contractDependencies": [
          22,
          537,
          615,
          640
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 768,
        "linearizedBaseContracts": [
          768,
          537,
          640,
          615,
          22
        ],
        "name": "YearnVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a3b921e2",
            "id": 648,
            "mutability": "mutable",
            "name": "underlyToken",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "122:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$537",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 647,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 646,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 537,
                "src": "122:5:4"
              },
              "referencedDeclaration": 537,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$537",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "767800de",
            "id": 650,
            "mutability": "mutable",
            "name": "addr",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "154:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 649,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 654,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "179:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 653,
              "keyType": {
                "id": 651,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "187:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "179:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 652,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "198:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 660,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 768,
            "src": "231:67:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 659,
              "keyType": {
                "id": 655,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "231:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 658,
                "keyType": {
                  "id": 656,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "258:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "250:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 657,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "370:66:4",
              "statements": [
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 670,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "381:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 671,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "388:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "381:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "381:12:4"
                },
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 674,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "403:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 676,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "424:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 675,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "418:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "418:11:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "403:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "403:26:4"
                }
              ]
            },
            "id": 681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "7653434658",
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10f38e2c55d617184355edd660ad6b214e4e3f87742bea766975fdc1b5e7dcd3",
                      "typeString": "literal_string \"vSCFX\""
                    },
                    "value": "vSCFX"
                  },
                  {
                    "hexValue": "7653434658",
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "347:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10f38e2c55d617184355edd660ad6b214e4e3f87742bea766975fdc1b5e7dcd3",
                      "typeString": "literal_string \"vSCFX\""
                    },
                    "value": "vSCFX"
                  },
                  {
                    "hexValue": "3130303030",
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "356:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  }
                ],
                "id": 668,
                "modifierName": {
                  "id": 664,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "332:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "332:30:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "317:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "316:15:4"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:4"
            },
            "scope": 768,
            "src": "305:131:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "481:65:4",
              "statements": [
                {
                  "expression": {
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 686,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "491:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 687,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "498:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "491:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "491:12:4"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 690,
                      "name": "underlyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "513:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 692,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "534:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 691,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "528:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$537_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "528:11:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$537",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "513:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$537",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "513:26:4"
                }
              ]
            },
            "functionSelector": "d1d80fdf",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddr",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "459:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:15:4"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:4"
            },
            "scope": 768,
            "src": "442:104:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "596:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 702,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "613:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "613:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 701,
                  "id": 705,
                  "nodeType": "Return",
                  "src": "606:33:4"
                }
              ]
            },
            "functionSelector": "cc80f6f3",
            "id": 707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "show",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:4"
            },
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "588:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "587:9:4"
            },
            "scope": 768,
            "src": "552:94:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "731:200:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "853:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 722,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "872:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YearnVault_$768",
                              "typeString": "contract YearnVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_YearnVault_$768",
                              "typeString": "contract YearnVault"
                            }
                          ],
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "864:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 720,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "864:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 724,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "879:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 716,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "827:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "827:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "827:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "827:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 728,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "902:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 729,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "913:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "922:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "913:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "896:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "896:28:4"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "669:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "685:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:35:4"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "722:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:9:4"
            },
            "scope": 768,
            "src": "652:279:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "1082:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 747,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1098:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 748,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1112:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 746,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1092:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:28:4"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 751,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "1130:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 752,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1139:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1149:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1139:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1130:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:20:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1182:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 761,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "1197:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 757,
                        "name": "underlyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "1160:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$537",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "1160:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:44:4"
                },
                {
                  "expression": {
                    "id": 764,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 744,
                    "src": "1221:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 745,
                  "id": 765,
                  "nodeType": "Return",
                  "src": "1214:13:4"
                }
              ]
            },
            "functionSelector": "e63697c8",
            "id": 767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "964:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "989:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "_minUnderlying",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "1019:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:93:4"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "1066:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:16:4"
            },
            "scope": 768,
            "src": "937:297:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 769,
        "src": "87:1607:4"
      }
    ],
    "src": "39:1656:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-08-24T11:19:53.985Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}